{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nvar AuthService = /** @class */function () {\n  function AuthService(_httpClient) {\n    this._httpClient = _httpClient;\n    this.url = 'https://identitytoolkit.googleapis.com/v1/accounts:';\n    this.apiKey = 'AIzaSyAq0zi5O_2bQbqF-h9dTQOaEd863upgIIA';\n    this.getToken();\n  }\n  AuthService.prototype.signUp = function (userModel) {\n    var _this = this;\n    var auth = {\n      email: userModel.eMailUser,\n      password: userModel.password,\n      returnSecureToken: true\n    };\n    return this._httpClient.post(\"\".concat(this.url, \"signUp?key=\").concat(this.apiKey), auth).pipe(map(function (response) {\n      _this.saveToken(response['idToken']);\n      return response;\n    }));\n  };\n  AuthService.prototype.login = function (userModel) {\n    var _this = this;\n    var auth = {\n      email: userModel.eMailUser,\n      password: userModel.password,\n      returnSecureToken: true\n    };\n    console.log(auth);\n    return this._httpClient.post(\"\".concat(this.url, \"signInWithPassword?key=\").concat(this.apiKey), auth).pipe(map(function (response) {\n      _this.saveToken(response['idToken']);\n      return response;\n    }));\n  };\n  AuthService.prototype.logout = function () {\n    localStorage.removeItem('authToken');\n  };\n  AuthService.prototype.saveToken = function (token) {\n    this.idToken = token;\n    localStorage.setItem('authToken', this.idToken);\n    var today = new Date();\n    today.setSeconds(900);\n    console.log(today.getTime());\n    localStorage.setItem('expiresIn', today.getTime().toString());\n    console.log(today);\n  };\n  AuthService.prototype.getToken = function () {\n    if (localStorage.getItem('authToken')) {\n      this.idToken = localStorage.getItem('authToken');\n    } else {\n      this.idToken = '';\n    }\n    return this.idToken;\n  };\n  AuthService.prototype.isAuthenticated = function () {\n    if (this.idToken.length < 2) {\n      return false;\n    }\n    var expiresIn = localStorage.getItem('expiresIn');\n    var expiration = new Date();\n    expiration.setTime(Number(expiresIn));\n    console.log(expiration.getTime());\n    console.log(expiration);\n    console.log(new Date().getTime());\n    console.log(new Date());\n    if (expiration > new Date()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n}();\nexport { AuthService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}